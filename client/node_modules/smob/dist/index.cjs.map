{"version":3,"file":"index.cjs","sources":["../src/constants.ts","../src/utils/check.ts","../src/utils/array.ts","../src/utils/cut.ts","../src/utils/has-own-property.ts","../src/utils/options.ts","../src/module.ts"],"sourcesContent":["/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport enum PriorityName {\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n\nexport function isSafeObject(object: Record<string, any>) : boolean {\n    try {\n        JSON.stringify(object);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function isSafeKey(key: string) : boolean {\n    return key !== '__proto__' &&\n        key !== 'prototype' &&\n        key !== 'constructor';\n}\n\nexport function isEqual(x: any, y: any): boolean {\n    if (Object.is(x, y)) return true;\n\n    if (x instanceof Date && y instanceof Date) {\n        return x.getTime() === y.getTime();\n    }\n\n    if (x instanceof RegExp && y instanceof RegExp) {\n        return x.toString() === y.toString();\n    }\n\n    if (\n        isObject(x) &&\n        isObject(y)\n    ) {\n        const keysX = Reflect.ownKeys(x) as string[];\n        const keysY = Reflect.ownKeys(y) as string[];\n        if (keysX.length !== keysY.length) {\n            return false;\n        }\n\n        for (let i = 0; i < keysX.length; i++) {\n            const key = keysX[i];\n            if (!Reflect.has(y, key) || !isEqual(x[key], y[key])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (\n        Array.isArray(x) &&\n        Array.isArray(y)\n    ) {\n        if (x.length !== y.length) {\n            return false;\n        }\n\n        for (let i = 0; i < x.length; i++) {\n            if (!isEqual(x[i], y[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isEqual } from './check';\n\nexport function distinctArray(arr: any[]) {\n    const copy = [...arr];\n\n    for (let i = 0; i < copy.length; i++) {\n        for (let j = copy.length - 1; j > i; j--) {\n            if (isEqual(copy[i], copy[j])) {\n                copy.splice(j, 1);\n            }\n        }\n    }\n\n    return copy;\n}\n\nexport function mergeArrays(\n    first: any[],\n    second: any[],\n    arrayDistinct: boolean,\n) {\n    const merged = first.concat(second);\n\n    if (arrayDistinct) {\n        return distinctArray(merged);\n    }\n\n    return merged;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './check';\n\nexport function cutObject<T extends Record<string, any>>(input: T, depth: number) : T {\n    if (depth < 0) {\n        return {} as T;\n    }\n\n    const value = { ...input };\n    const keys : (keyof T)[] = Object.keys(value);\n\n    for (let i = 0; i < keys.length; i++) {\n        if (isObject(value[keys[i]])) {\n            value[keys[i]] = cutObject(value[keys[i]], depth - 1);\n        }\n    }\n\n    return value;\n}\n","/*\n * Copyright (c) 2021.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from '../constants';\nimport type { Options, OptionsInput } from '../type';\n\nexport function buildOptions(options?: OptionsInput) : Options {\n    options = options || {};\n\n    options.array = options.array ?? true;\n    options.arrayDistinct = options.arrayDistinct ?? false;\n    options.priority = options.priority || PriorityName.LEFT;\n\n    return options as Options;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from './constants';\nimport type {\n    Merger, MergerResult, Options, OptionsInput,\n} from './type';\nimport {\n    buildOptions,\n    hasOwnProperty,\n    isObject,\n    isSafeKey,\n    isSafeObject,\n    mergeArrays,\n} from './utils';\n\nexport function baseMerger<A extends Record<string, any>, B extends Record<string, any>>(\n    options: Options,\n    target: A,\n    ...sources: B[]\n) : MergerResult<A, B> {\n    if (!sources.length) return target as MergerResult<A, B>;\n\n    const source = sources.shift();\n\n    if (\n        isObject(target) &&\n        isObject(source)\n    ) {\n        const keys = Object.keys(source);\n        for (let i = 0; i < keys.length; i++) {\n            const key : string = keys[i];\n\n            if (!isSafeKey(key)) {\n                continue;\n            }\n\n            if (hasOwnProperty(target, key)) {\n                if (options.strategy) {\n                    const applied = options.strategy(target, key, source[key]);\n                    if (typeof applied !== 'undefined') {\n                        continue;\n                    }\n                }\n\n                if (!isSafeObject(source[key])) {\n                    continue;\n                }\n\n                if (\n                    isObject(target[key]) &&\n                    isObject(source[key])\n                ) {\n                    baseMerger(options, target[key], source[key]);\n\n                    continue;\n                }\n\n                if (\n                    options.array &&\n                    Array.isArray(target[key]) &&\n                    Array.isArray(source[key])\n                ) {\n                    switch (options.priority) {\n                        case PriorityName.LEFT:\n                            Object.assign(target, {\n                                [key]: mergeArrays(target[key], source[key], options.arrayDistinct),\n                            });\n                            break;\n                        case PriorityName.RIGHT:\n                            Object.assign(target, {\n                                [key]: mergeArrays(source[key], target[key], options.arrayDistinct),\n                            });\n                            break;\n                    }\n\n                    continue;\n                }\n\n                if (options.priority === PriorityName.RIGHT) {\n                    Object.assign(target, { [key]: source[key] });\n                }\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return baseMerger(options, target, ...sources);\n}\n\nexport function createMerger(input?: OptionsInput) : Merger {\n    const options = buildOptions(input);\n\n    return <A extends Record<string, any>, B extends Record<string, any>>(\n        target: A,\n        ...sources: B[]\n    ) => baseMerger(options, target, ...sources);\n}\n\nexport const merge = createMerger();\n"],"names":["PriorityName","isObject","item","Array","isArray","isSafeObject","object","JSON","stringify","e","isSafeKey","key","isEqual","x","y","Object","is","Date","getTime","RegExp","toString","keysX","Reflect","ownKeys","keysY","length","i","has","distinctArray","arr","copy","j","splice","mergeArrays","first","second","arrayDistinct","merged","concat","_extends","hasOwnProperty","obj","prop","prototype","call","buildOptions","options","array","priority","LEFT","baseMerger","target","sources","source","shift","keys","strategy","assign","RIGHT","createMerger","input","merge","cutObject","depth","value"],"mappings":"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"}